"""added proper books system

Revision ID: d48cbab6fc85
Revises: 0b5adb4f36c8
Create Date: 2025-04-21 01:09:32.736303

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd48cbab6fc85'
down_revision: Union[str, None] = '0b5adb4f36c8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authors',
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('biography', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('author_id')
    )
    op.create_index(op.f('ix_authors_name'), 'authors', ['name'], unique=False)
    op.create_table('publishers',
    sa.Column('publisher_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('contact_info', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('publisher_id')
    )
    op.create_index(op.f('ix_publishers_name'), 'publishers', ['name'], unique=False)
    op.create_table('book_authors',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['authors.author_id'], ),
    sa.ForeignKeyConstraint(['book_id'], ['books.book_id'], ),
    sa.PrimaryKeyConstraint('book_id', 'author_id')
    )
    op.add_column('books', sa.Column('publisher_id', sa.Integer(), nullable=True))
    op.alter_column('books', 'total_copies',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('books', 'available_copies',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index('ix_books_author', table_name='books')
    op.drop_index('ix_books_book_id', table_name='books')
    op.create_index(op.f('ix_books_publisher_id'), 'books', ['publisher_id'], unique=False)
    op.drop_constraint('books_category_id_fkey', 'books', type_='foreignkey')
    op.create_foreign_key(None, 'books', 'publishers', ['publisher_id'], ['publisher_id'])
    op.create_foreign_key(None, 'books', 'categories', ['category_id'], ['category_id'])
    op.drop_column('books', 'publisher')
    op.drop_column('books', 'author')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('books', sa.Column('author', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('books', sa.Column('publisher', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'books', type_='foreignkey')
    op.drop_constraint(None, 'books', type_='foreignkey')
    op.create_foreign_key('books_category_id_fkey', 'books', 'categories', ['category_id'], ['category_id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_books_publisher_id'), table_name='books')
    op.create_index('ix_books_book_id', 'books', ['book_id'], unique=False)
    op.create_index('ix_books_author', 'books', ['author'], unique=False)
    op.alter_column('books', 'available_copies',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('books', 'total_copies',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('books', 'publisher_id')
    op.drop_table('book_authors')
    op.drop_index(op.f('ix_publishers_name'), table_name='publishers')
    op.drop_table('publishers')
    op.drop_index(op.f('ix_authors_name'), table_name='authors')
    op.drop_table('authors')
    # ### end Alembic commands ###
